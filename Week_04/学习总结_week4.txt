#bfs 模版
def bfs(root):

    queue = [root]
    res = []
    while queue:
        child = []
        node = []
        for item in queque:
            child.append(item.val)
            if item.left:
                node.append(item.left)
            if item.right:
                node.append(item.right)
        res.append(child)
        queue = node
    return res


##dfs 模版
def dfs(level, n):
    #terminator
    if (level == n):
        return
    
    #process current level
    # drill down
    dfs(level + 1, n)

    #reverse states if necessary
    #combine results if necessary

#bs 模版
def bs(nums):
    left, right = 0, len(nums) - 1
    while left + 1 < right:
         mid = left + (right - left) // 2
         if nums[mid] == target:
             break
         elif nums[mid] > target:
              right = mid
         else:
              left = mid
    if nums[left] == target:
        return left
    if nums[right] == target:
        return right
    return -1


